{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "Foncia manager api",
    "description": "Api for a test",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [{"url": "http://localhost:3000/api/v1"}],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Login on the api",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "description": "Credential to login",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Token for Berear",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Token invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/codes/{managerId}": {
      "get": {
        "tags": [
          "Codes"
        ],
        "description": "Get all codes for manager access",
        "parameters": [
          {
            "name": "managerId",
            "in": "path",
            "description": "Id of the manager",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Codes",
            "schema": {
              "$ref": "#/definitions/Codes"
            }
          },
          "400": {
            "description": "Bad Id",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Token invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "description": "Listing clients",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Clients",
            "schema": {
              "$ref": "#/definitions/Clients"
            }
          },
          "401": {
            "description": "Token invalid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Login": {
      "required": [
        "user",
        "password"
      ],
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Token": {
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Codes": {
      "type": "object",
      "properties": {
        "token": "string"
      }
    },
    "Clients": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "fullname": "string",
          "email": "string",
          "lots": "number"
        }
      }
    },
    "Error": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
